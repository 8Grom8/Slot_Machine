{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Header/Header.jsx","store/actions.js","store/constants.js","components/SlotMachine/functions.js","img/M00_000.jpg","img/M01_000.jpg","img/M02_000.jpg","img/M03_000.jpg","img/M04_000.jpg","img/M05_000.jpg","img/M06_000.jpg","img/M07_000.jpg","img/M08_000.jpg","img/M09_000.jpg","img/M10_000.jpg","img/M11_000.jpg","img/M12_000.jpg","components/SlotMachine/SlotMachine.jsx","components/FormDialog/FormDialog.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/GamePage/GamePage.jsx","store/initialState.js","store/store.js","store/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","balance","useSelector","state","userBalance","shallowEqual","className","Icon","style","width","height","Avatar","alt","src","Header","createUpdateBalance","payload","type","triggerSlotRotation","ref","min","max","options","children","randomIdx","Math","floor","random","shift","offsetTop","top","slotValues","imgSrc","imgSrc1","imgSrc2","imgSrc3","imgSrc4","imgSrc5","imgSrc6","imgSrc7","imgSrc8","imgSrc9","imgSrc10","imgSrc11","imgSrc12","SlotMachine","close","useState","result","setResult","rolling","setRolling","slotRef","createRef","dispatch","useDispatch","useEffect","prize","spinAction","slotElements","map","item","idx","img","i","onClick","setTimeout","newResult","slot","current","debuggingSlotRotation","FormDialog","open","setOpen","handleClose","Button","variant","color","Dialog","onClose","area-labelledby","DialogTitle","id","DialogContent","DialogContentText","DataTable","data","columns","field","headerName","renderCell","params","date","value","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","v4","rows","pageSize","checkboxSelection","Footer","GamePage","initialState","store","createStore","action","profileData","newBalance","Slot1","time","now","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a7b8b6c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport {useSelector, shallowEqual} from \"react-redux\";\r\n\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n    const balance = useSelector(state => state.userBalance, shallowEqual)\r\n    return (\r\n        <div className='navbar'>\r\n            <div className='navbar-left-side'>\r\n                <Icon style={{width:55, height:30}}>start</Icon>\r\n                <h2 className='navbar-left-side-title'>Slot Machine</h2>\r\n            </div>\r\n            <div className=\"navbar-right-side\">\r\n                <span className='navbar-right-side-balance'>Balance:{balance}</span>\r\n                <Avatar alt=\"Avatar\" src=\"/static/images/avatar/1.jpg\" />\r\n            </div>\r\n        </div>\r\n);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport './Header.scss'\r\nimport Navbar from \"../Navbar\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {LOGIN, UPDATE_BALANCE} from \"./constants\";\r\nexport const createLogin = (payload) =>{\r\n    const action = {\r\n        type: LOGIN,\r\n        payload\r\n    }\r\n    return action\r\n}\r\n\r\nexport const createUpdateBalance = (payload) =>{\r\n    const action = {\r\n        type: UPDATE_BALANCE,\r\n        payload\r\n    }\r\n    return action\r\n}\r\n","export const LOGIN = 'LOGIN'\r\nexport const UPDATE_BALANCE = 'UPDATE_BALANCE'\r\n","export const getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\nexport const triggerSlotRotation = (ref) => {\r\n    const options = ref.children;\r\n    const randomIdx = getRandomNumber(1,13);\r\n    const chosenOption = options[randomIdx -1];\r\n    const shift = -chosenOption.offsetTop;\r\n    ref.style.top = `${shift}px`;\r\n    return randomIdx;\r\n};\r\n\r\nexport const debuggingSlotRotation = (ref) => {\r\n    const options = ref.children;\r\n    const chosenOption = options[6];\r\n    const shift = -chosenOption.offsetTop;\r\n    ref.style.top = `${shift}px`;\r\n    return 7;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/M00_000.614dfac0.jpg\";","export default __webpack_public_path__ + \"static/media/M01_000.7a46ee72.jpg\";","export default __webpack_public_path__ + \"static/media/M02_000.9c1473a0.jpg\";","export default __webpack_public_path__ + \"static/media/M03_000.bb464235.jpg\";","export default __webpack_public_path__ + \"static/media/M04_000.7a3a7430.jpg\";","export default __webpack_public_path__ + \"static/media/M05_000.213d7be1.jpg\";","export default __webpack_public_path__ + \"static/media/M06_000.f65a7035.jpg\";","export default __webpack_public_path__ + \"static/media/M07_000.1696bd70.jpg\";","export default __webpack_public_path__ + \"static/media/M08_000.493cb767.jpg\";","export default __webpack_public_path__ + \"static/media/M09_000.c323429e.jpg\";","export default __webpack_public_path__ + \"static/media/M10_000.ae627b98.jpg\";","export default __webpack_public_path__ + \"static/media/M11_000.1cc2727c.jpg\";","export default __webpack_public_path__ + \"static/media/M12_000.d257d782.jpg\";","import React, {createRef, useState, useEffect} from 'react';\r\nimport { createUpdateBalance } from '../../store/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport { triggerSlotRotation, debuggingSlotRotation } from './functions';\r\nimport imgSrc from \"../../img/M00_000.jpg\";\r\nimport imgSrc1 from \"../../img/M01_000.jpg\";\r\nimport imgSrc2 from \"../../img/M02_000.jpg\";\r\nimport imgSrc3 from \"../../img/M03_000.jpg\";\r\nimport imgSrc4 from \"../../img/M04_000.jpg\";\r\nimport imgSrc5 from \"../../img/M05_000.jpg\";\r\nimport imgSrc6 from \"../../img/M06_000.jpg\";\r\nimport imgSrc7 from \"../../img/M07_000.jpg\";\r\nimport imgSrc8 from \"../../img/M08_000.jpg\";\r\nimport imgSrc9 from \"../../img/M09_000.jpg\";\r\nimport imgSrc10 from \"../../img/M10_000.jpg\";\r\nimport imgSrc11 from \"../../img/M11_000.jpg\";\r\nimport imgSrc12 from \"../../img/M12_000.jpg\";\r\nimport './SlotMachine.scss'\r\n\r\nconst img1 = <img src={imgSrc} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img2 = <img src={imgSrc1} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img3 = <img src={imgSrc2} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img4 = <img src={imgSrc3} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img5 = <img src={imgSrc4} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img6 = <img src={imgSrc5} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img7 = <img src={imgSrc6} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img8 = <img src={imgSrc7} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img9 = <img src={imgSrc8} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img10 = <img src={imgSrc9} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img11 = <img src={imgSrc10} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img12 = <img src={imgSrc11} width=\"100\" height=\"100px\" alt=\"\" />;\r\nconst img13 = <img src={imgSrc12} width=\"100\" height=\"100px\" alt=\"\" />;\r\n\r\nconst slotValues = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12, img13];\r\nconst SlotMachine = ({close}) => {\r\n    const [result, setResult] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    const [rolling, setRolling] = useState(false)\r\n    const slotRef = [\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef(),\r\n      createRef()\r\n    ];\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        if (!rolling && result[0]===0){\r\n            if (\r\n              result[0] === result[1] &&\r\n              result[0] === result[2] \r\n             ) {\r\n              const prize = result[0] === 7;\r\n              const spinAction = createUpdateBalance(prize);\r\n              dispatch(spinAction);\r\n            } else if (\r\n              result[0] === result[1] ||\r\n              result[0] === result[2] ||\r\n              result[0] === result[3]\r\n            ) {\r\n              const spinAction = createUpdateBalance(0.5);\r\n              dispatch(spinAction);\r\n            }\r\n        }\r\n    })\r\n\r\n    const spinSlot = () => {\r\n        setRolling(true)\r\n        setTimeout(() => setRolling(false), 1000)\r\n        const spinAction = createUpdateBalance(-1)\r\n        dispatch(spinAction)\r\n       const newResult = slotRef.map((slot, i) => {\r\n            const newNumber = triggerSlotRotation(slot.current);\r\n            return newNumber\r\n        });\r\n        setResult(newResult)\r\n    }\r\n    const debugSlot = () => {\r\n        const newResult = slotRef.map((slot, i) => {\r\n                const newNumber = debuggingSlotRotation(slot.current);\r\n                return newNumber\r\n            }\r\n        );\r\n        setResult(newResult)\r\n    }\r\n\r\n    const slotElements = result.map((item, idx) =>\r\n        <div className=\"slot-result-item\" key={idx}>\r\n            <section className='slot-result-item-section'>\r\n                <div className=\"slot-result-item-container\" ref={slotRef[idx]}>\r\n                    {slotValues.map((img, i) => (\r\n                        <div key={i}>\r\n                            <span>{img}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </div>)\r\n\r\n    return (\r\n        <div className=\"slot-machine\">\r\n            <div className=\"slot-result\">\r\n                {slotElements}\r\n            </div>\r\n            <div className=\"slot-machine-actions\">\r\n                <button className='slot-machine-action' onClick={spinSlot}>spin</button>\r\n                <button className='slot-machine-action' onClick={debugSlot}>debugging</button>\r\n                <button className='slot-machine-action' onClick={close}>close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlotMachine;\r\n","import React, {useState} from 'react';\r\nimport {Button, DialogContentText} from '@material-ui/core';\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport SlotMachine from \"../SlotMachine\";\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleClickOpen = () =>{\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () =>{\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>OR||or</Button>\r\n            <Dialog open={open} onClose={handleClose} area-labelledby = 'form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>Log in</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Slot</DialogContentText>\r\n                    <SlotMachine close={handleClose}/>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport {v4} from 'uuid';\r\n\r\nimport FormDialog from \"../FormDialog\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\n\r\nconst toDate = (date) => {\r\n    return new Intl.DateTimeFormat('uk-Ua', {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        hour12: false,\r\n    }).format(new Date(date));\r\n};\r\n\r\nexport default function DataTable() {\r\n    const balance = useSelector(state => state.userBalance, shallowEqual)\r\n    const data = useSelector(state => state.data, shallowEqual)\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 70 },\r\n        { field: 'Slot1', headerName: 'Slot1', width: 130 },\r\n        { field: 'Slot2', headerName: 'Slot2', width: 130 },\r\n        { field: 'Slot3', headerName: 'Slot3', width: 130 },\r\n        { field: 'time', headerName: 'Time', width: 130, renderCell: (params)=>{\r\n                return toDate(params.value)}},\r\n    ];\r\n\r\n    const rows = [\r\n        { id: v4(), Slot1: balance, time: ''}\r\n    ];\r\n\r\n    return (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid rows={data} columns={columns} pageSize={5} checkboxSelection />\r\n            <FormDialog />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport './GamePage.scss'\r\n\r\nimport Header from \"../Header\";\r\nimport Main from \"../Main\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst GamePage = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Main />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePage;\r\n","export const initialState = {\r\n    userBalance: 99.99,\r\n    data: [],\r\n};\r\n","import {createStore} from \"redux\";\r\n\r\nimport {reducer} from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store\r\n\r\n\r\n","import {initialState} from \"./initialState\";\r\nimport {v4} from \"uuid\";\r\n\r\nexport const reducer = (state = initialState, action)=> {\r\n    switch(action.type) {\r\n        case \"LOGIN\":\r\n            return {...state, profileData: action.payload};\r\n        case \"UPDATE_BALANCE\":\r\n            const newBalance = state.userBalance+action.payload\r\n            return {...state, userBalance: newBalance, data: [...state.data, {id: v4(), Slot1: newBalance, time: Date.now()}]}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport './App.css';\nimport GamePage from \"./components/GamePage\";\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nfunction App() {\n  return (\n      <Provider store={store}>\n          <div className=\"App\">\n              <GamePage />\n          </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}